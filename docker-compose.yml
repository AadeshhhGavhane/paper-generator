version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: paper-generator-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./runs:/app/runs  # Persist generated papers
      - ./paper:/app/paper  # Mount paper directory
      - backend_cache:/root/.cache  # Cache pip and other tools
    env_file:
      - .env  # Environment variables (API keys, etc.)
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - paper-generator-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: paper-generator-frontend
    ports:
      - "80:80"
      - "3000:80"  # Alternative port for development
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./runs:/usr/share/nginx/html/files/runs:ro  # Serve generated files
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - paper-generator-network

volumes:
  backend_cache:
    driver: local
  runs_data:
    driver: local

networks:
  paper-generator-network:
    driver: bridge